version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: desa-cilame-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${DB_NAME:-desa_cilame_prod}
      MYSQL_USER: ${DB_USER:-desa_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-desa_password}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3306:3306"
    networks:
      - desa-cilame-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: desa-cilame-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - desa-cilame-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 5

  # Main Database Server
  main-db-server:
    build: .
    container_name: desa-cilame-main-db
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=${DB_NAME:-desa_cilame_prod}
      - DB_USER=${DB_USER:-desa_user}
      - DB_PASSWORD=${DB_PASSWORD:-desa_password}
      - REDIS_URL=redis://redis:6379
    ports:
      - "5000:5000"
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - desa-cilame-network
    command: ["node", "backend/server-main.js"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # UMKM Database Server
  umkm-db-server:
    build: .
    container_name: desa-cilame-umkm-db
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=${DB_NAME:-desa_cilame_prod}
      - DB_USER=${DB_USER:-desa_user}
      - DB_PASSWORD=${DB_PASSWORD:-desa_password}
      - REDIS_URL=redis://redis:6379
    ports:
      - "5001:5001"
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - desa-cilame-network
    command: ["node", "backend/server-umkm.js"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Admin Database Server
  admin-db-server:
    build: .
    container_name: desa-cilame-admin-db
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=${DB_NAME:-desa_cilame_prod}
      - DB_USER=${DB_USER:-desa_user}
      - DB_PASSWORD=${DB_PASSWORD:-desa_password}
      - REDIS_URL=redis://redis:6379
    ports:
      - "5002:5002"
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - desa-cilame-network
    command: ["node", "backend/server-admin.js"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Location Database Server
  location-db-server:
    build: .
    container_name: desa-cilame-location-db
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=${DB_NAME:-desa_cilame_prod}
      - DB_USER=${DB_USER:-desa_user}
      - DB_PASSWORD=${DB_PASSWORD:-desa_password}
      - REDIS_URL=redis://redis:6379
    ports:
      - "5003:5003"
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - desa-cilame-network
    command: ["node", "backend/server-location.js"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5003/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Next.js Application
  frontend:
    build: .
    container_name: desa-cilame-frontend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=https://${DOMAIN:-localhost}/api
      - NEXT_PUBLIC_MAIN_API_URL=https://${DOMAIN:-localhost}:5000
      - NEXT_PUBLIC_UMKM_API_URL=https://${DOMAIN:-localhost}:5001
      - NEXT_PUBLIC_ADMIN_API_URL=https://${DOMAIN:-localhost}:5002
      - NEXT_PUBLIC_LOCATION_API_URL=https://${DOMAIN:-localhost}:5003
    ports:
      - "3000:3000"
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      main-db-server:
        condition: service_healthy
      umkm-db-server:
        condition: service_healthy
      admin-db-server:
        condition: service_healthy
      location-db-server:
        condition: service_healthy
    networks:
      - desa-cilame-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: desa-cilame-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites-enabled:/etc/nginx/sites-enabled
      - ./ssl:/etc/ssl/certs
      - ./uploads:/var/www/html/uploads
    depends_on:
      - frontend
      - main-db-server
      - umkm-db-server
      - admin-db-server
      - location-db-server
    networks:
      - desa-cilame-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Monitoring with Prometheus (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: desa-cilame-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - desa-cilame-network
    profiles:
      - monitoring

  # Grafana for visualization (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: desa-cilame-grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin123}
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - desa-cilame-network
    profiles:
      - monitoring

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  desa-cilame-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16